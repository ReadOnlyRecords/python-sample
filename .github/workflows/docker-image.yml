name: Build images and push to GAR

on:
  workflow_dispatch:
    type: [new-python-image]
  repository_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PROJECT_ID: minimus-sa
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/minimus-sa/

jobs:
  build-push-artifact:
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout"
        uses: "actions/checkout@v3"

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Install Cosign"
        uses: sigstore/cosign-installer@v3.8.1

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Minimus registry auth"
        run: docker login -u minimus -p ${{ secrets.MINIMUS_TOKEN }} reg.mini.dev

      - name: "GAR auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Check Minimus image signature"
        run: |-
          cosign verify \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity=https://github.com/minimusio/images/.github/workflows/build.yaml@refs/heads/main \
            reg.mini.dev/python:latest

      - name: "Download Minimus image SBOM"
        run: |-
          cosign download attestation \
           --predicate-type=https://spdx.dev/Document \
           --platform linux/amd64 \
           reg.mini.dev/python:latest | jq '.payload | @base64d |
           fromjson | .predicate'  > spdx.json

      - name: "Scan Minimus image SBOM"
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'sbom'
          scan-ref: 'spdx.json'
          format: 'table'

      - name: Build container image from Minimus base
        uses: redhat-actions/buildah-build@v2
        with:
          archs: amd64, arm64
          image: "python/python-library"
          tags: latest
          containerfiles: Dockerfile
          layers: false
          oci: true

      - name: Push to Container Registry
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
        with:
          registry: ${{ env.GAR_LOCATION }}
          image: "python/python-library"
          tags: latest

      - name: Build container image from Minimus base
        uses: redhat-actions/buildah-build@v2
        with:
          archs: amd64, arm64
          image: "python/python-mini"
          tags: latest
          containerfiles: Dockerfile.mini
          layers: false
          oci: true

      - name: Push to Container Registry
        uses: redhat-actions/push-to-registry@v2
        id: push-mini
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
        with:
          registry: ${{ env.GAR_LOCATION }}
          image: "python/python-mini"
          tags: latest
          

      - name: "Scan python image with grype"
        uses: anchore/scan-action@v6
        with:
          image: '${{ env.GAR_LOCATION }}python/python-library:latest'
          fail-build: false
          output-format: 'table'
          severity-cutoff: 'critical'
          by-cve: true

      - name: Sign the library image
        run: |
          cosign sign \
            ${{ env.GAR_LOCATION }}python/python-library:latest
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Sign the Minimus image
        run: |
          cosign sign \
            ${{ env.GAR_LOCATION }}python/python-mini:latest
        env:
          COSIGN_EXPERIMENTAL: 1
          
      - name: Scan python image
        uses: aquasecurity/trivy-action@0.30.0
        if: always()
        with:
          image-ref: '${{ env.GAR_LOCATION }}python/python-library:latest'
          format: 'table'

      - name: "Scan python-mini image with grype"
        uses: anchore/scan-action@v6
        with:
          image: '${{ env.GAR_LOCATION }}python/python-mini:latest'
          fail-build: false
          output-format: 'table'
          severity-cutoff: 'critical'
          by-cve: true

      - name: Scan python-mini image
        uses: aquasecurity/trivy-action@0.30.0
        if: always()
        with:
          image-ref: '${{ env.GAR_LOCATION }}python/python-mini:latest'
          format: 'table'

